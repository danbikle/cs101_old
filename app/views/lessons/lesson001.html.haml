%h1#top Lesson 001 [ Google GCP ]
%p I started this lesson by studying the URL listed below:
%p
  %a(href='https://codelabs.developers.google.com/cpb100' target='x')
    https://codelabs.developers.google.com/cpb100

%p On that page I assume the correct ordering of some links is listed below:

%ul
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-free-trial' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-free-trial
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-compute-engine' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-compute-engine
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-dataproc' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-dataproc
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-bigquery-dataset' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-bigquery-dataset
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-tensorflow' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-tensorflow
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-translate-api' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-translate-api
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-serverless-ingest' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-serverless-ingest
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-distributed-landsat' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-distributed-landsat
  %li
    %a(href='https://codelabs.developers.google.com/codelabs/cpb100-datalab' target='x')
      https://codelabs.developers.google.com/codelabs/cpb100-datalab



%p The above links are discussed below:
%ul
  %li
    %a(href='#free-trial') free-trial
  %li
    %a(href='#compute-engine') compute-engine
  %li
    %a(href='#cloud-storage') cloud-storage
  %li
    %a(href='#cloud-sql') cloud-sql
  %li
    %a(href='#dataproc') dataproc
  %li
    %a(href='#bigquery-dataset') bigquery-dataset
  %li
    %a(href='#tensorflow') tensorflow
  %li
    %a(href='#translate-api') translate-api
  %li
    %a(href='#serverless-ingest') serverless-ingest
  %li
    %a(href='#distributed-landsat') distributed-landsat
  %li
    %a(href='#datalab') datalab



%hr/

%h2#free-trial Free-Trial

%p#free-trial Next, I clicked this link:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-free-trial' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-free-trial
    
%p I saw a simple path through 4 pages.

%p The third page had a noteworthy URL I used to get $300 of cloud-credit from Google:

%p
  %a(href='https://console.developers.google.com/freetrial' target='x')
    https://console.developers.google.com/freetrial
  
%p
  I logged into my gmail-account and tried the above link.

%p
  It worked well; I gave it my credit-card info.
%p
  It gave me $300 of cloud-credit from Google.

%p
  I hope that you can also get that credit.

%p Next, I visited the URL listed below:

%p
  %a(href='https://console.cloud.google.com/projectcreate' target='x')
    https://console.cloud.google.com/projectcreate

%p I used that page to create a project called cpb100.

%p Google needed 4 minutes to create project cpb100.

%p Although I wanted the name to be cp100, Google added some text to the end of the name:

%p cpb100-195004

%p Google created a URL for the project:
%p
  %a(href='https://console.cloud.google.com/home/activity?project=cpb100-195004' target='x')
    https://console.cloud.google.com/home/activity?project=cpb100-195004
%p In the upper right I saw a blue-button called "UPGRADE".
%p I clicked the button.
%p Next, I accepted the upgrade offer because I wanted access to services required by future training sessions.

%p Then I verified that the "hamburger-link" in the upper-left behaved well when I clicked it.

%p It did behave well and I was ready to move on.

%p I returned to the URL listed below:
%p
  %a(href='https://codelabs.developers.google.com/cpb100' target='x')
    https://codelabs.developers.google.com/cpb100

%a(href='#top') [top]

%hr/

%h2#compute-engine Compute-Engine

%p Next, I clicked the next link in the series:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-compute-engine/index.html' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-compute-engine/index.html

%p I quickly clicked through the first two links in that page and landed at this URL:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-compute-engine/index.html#2' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-compute-engine/index.html#2

%p It asked me to click the upper-left-hamburger-link in my project page; I did that.
%p Then I followed the advice to click the "Compute Engine" link on the left:
%p
  %a(href='https://console.cloud.google.com/compute' target='x')
    https://console.cloud.google.com/compute
%p I clicked the "Create"  button.
%p It served me a form from this URL:
%p
  %a(href='https://console.cloud.google.com/compute/instancesAdd' target='x')
    https://console.cloud.google.com/compute/instancesAdd

%p I clicked radio-button: "Allow full access to all Cloud APIs"

%p I deviated from the tutorial and clicked the link: "SSH keys"

%p My intent was to ease my ability to ssh into the GCP-Instance from a shell in my laptop.
%p The text I mouse-copied into the GCP SSH-key-form came from this file:
%p ~/.ssh/id_rsa.pub
%p It looks like this:
.syntax
  %pre
    %code
      ssh-rsa
      AAAAB3NzaC1yc2EAAAADAQABAAABAQC8cbLxnaqPPznHz9DgMq
      xg38LPxRTRT1qjyQH0cGEHHtHVYHgPdCNvW++0ArCuJVxiQ7fx
      XvK2cYThurYozSkI6uwxVSPBoJgsLmLPvhc+JshDHi7SgtWl4b
      8JZlnL5dMPQNo61p/qGmqZpKxXYJanY0zN4WnB17vlnVFhXL2j
      3U3YKvifIC8a6gRKitG+XFGmj5sZKbJuqbnfhD93ytcRGV+rEM
      VipYAl2XBs27K0VGwK+u3NOOerWXjRrgqIo9Frk7C4rps/dMYd
      56QKxnVumr24TUJ0TlymsCYkhD9qDHyJHxGTyN5BAzUpryphd7
      QDLZn+Rdrm4Ssu8/jclLPH
      dan@ubu42

%p Next, I clicked the blue "Create" button.

%p GCP started the instance in about 1 minute.

%p I saw the corresponding IP address: 35.227.120.155

%p I tried to login with this shell command:

.syntax
  %pre
    %code ssh 35.227.120.155

%p It failed.

%p After a bit of detective work I learned that I needed to specify an account which match the name in my gmail account:

.syntax
  %pre
    %code ssh dan@35.227.120.155

%p The above command worked perfectly.

%p Next I followed the instructions in this page:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-compute-engine/index.html#4' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-compute-engine/index.html#4
.syntax
  %pre
    %code.bash
      sudo apt-get update
      sudo apt-get -y -qq install git
      git --version

%p The above shell commands worked perfectly in my new GCP instance.

%p I returned to the URL listed below:
%p
  %a(href='https://codelabs.developers.google.com/cpb100' target='x')
    https://codelabs.developers.google.com/cpb100

%a(href='#top') [top]

%hr/

%h2#cloud-storage Cloud-Storage

%p Next, I clicked the next link in the series:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage

%p I studied the page there and clicked through until I landed at this URL:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#2' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#2

%p I verified that I could ssh into the GCP instance I had created earlier.

%p After the instance served me a shell prompt, I issued a shell command:

.syntax
  %pre
    %code.bash git clone https://github.com/GoogleCloudPlatform/training-data-analyst

%p That command worked well.

%p I ran more shell commands:

.syntax
  %pre
    %code.bash
      cd training-data-analyst/CPB100/lab2b
      less ingest.sh
      bash ingest.sh
      head earthquakes.csv

%p I clicked the next node in the page and landed on this URL:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#3' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#3
  
%p I read the content on that page and then visited the URL below:

%p
  %a(href='https://github.com/GoogleCloudPlatform/datalab-samples/blob/master/basemap/earthquakes.ipynb' target='x')
    https://github.com/GoogleCloudPlatform/datalab-samples/blob/master/basemap/earthquakes.ipynb
  
%p I ran two shell commands inside the GCP instance:

.syntax
  %pre
    %code.bash
      bash install_missing.sh
      python transform.py
      
%p The last command resulted in some warnings from Python but I am confident it worked.

%p I noticed a new file which python created:

.syntax
  %pre
    =render 'lesson001a'

%p I copied the PNG file to my laptop and looked at it:

%img(width='999' src='/lesson001/earthquakes.png')

%p I clicked the next node in the page and landed on this URL:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#4' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#4

%p I visited the URL below:

%p
  %a(href='https://cloud.google.com/' target='x')
    https://cloud.google.com/
    
%p I hovered the button: "GO TO CONSOLE".

%p I made note of its href-URL:

%p
  %a(href='https://console.cloud.google.com' target='x')
    https://console.cloud.google.com

%p I clicked the button.

%p It sent me to a page I call: "Dashboard".

%p I clicked the upper-left-hamburger-link and from there clicked: "Storage".

%p It served me a page with blue-button: "Create bucket".

%p I clicked "Create bucket".

%p It served me a form asking me to name a new bucket.

%p I called my new bucket: cs101feb2018

%p At the bottom of the form I clicked the blue "Create" button.

%p I saw evidence that it worked.

%p It served me a page, called "Browser", prompting me to upload files into the bucket.

%p The page reminds me of the page served to me by AWS when I work with S3.


%p I returned to the cpb100 page:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#4' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#4

%p I clicked the next node in the page and landed on this URL:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#5' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#5

%p I returned to the shell prompt of my GCP instance and type a command:

.syntax
  %pre
    %code.bash gsutil cp earthquakes.* gs://cs101feb2018

%p I am confident it worked.

%p I verified by returning to the "Browser" page and inspecting the contents of cs101feb2018.

%p It listed three files:

%ul
  %li earthquakes.csv
  %li earthquakes.htm
  %li earthquakes.png
  

%p I returned to the cpb100 page:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#5' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#5

%p I clicked the next node in the page and landed on this URL:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#6' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#6


%p I returned to the "Browser" page, AKA GCP Console, and checked the boxes to "Share publicly" the three files in cs101feb2018.

%p I list the resulting URLs below:

%ul
  %li
    %a(href='https://storage.cloud.google.com/cs101feb2018/earthquakes.csv' target='x')
      https://storage.cloud.google.com/cs101feb2018/earthquakes.csv
  %li
    %a(href='https://storage.cloud.google.com/cs101feb2018/earthquakes.htm' target='x')
      https://storage.cloud.google.com/cs101feb2018/earthquakes.htm
  %li
    %a(href='https://storage.cloud.google.com/cs101feb2018/earthquakes.png' target='x')
      https://storage.cloud.google.com/cs101feb2018/earthquakes.png

%p On my laptop I verified that the public could see earthquakes.png

.syntax
  %pre
    %code.bash
      cd /tmp
      wget https://storage.cloud.google.com/cs101feb2018/earthquakes.png

%p I tried to use an incognito-browser to see earthquakes.png

%p The google server asked me to authenticate.

%p Google should not force me to login to gmail in order to see publicly-shared content.

%p Based on this "feature", AWS-S3 is clearly superior to GCP-Storage.

%p I returned to the cpb100 page:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#6' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#6

%p I clicked the next node in the page and landed on this URL:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#7' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-storage/index.html#7

%p I followed the instructions in that page to delete my GCP instance.

%p I returned to the URL listed below:
%p
  %a(href='https://codelabs.developers.google.com/cpb100' target='x')
    https://codelabs.developers.google.com/cpb100

%a(href='#top') [top]

%hr/

%h2#cloud-sql Cloud-Sql

%p Next, I clicked the next link in the series:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql

%p I studied the page it served me:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#0' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#0
  
%p I studied the next page in sequence:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#1' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#1
  
%p I studied the next page in sequence:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#2' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#2
  
%p I visited my GCP-console page by visiting this URL:

%p
  %a(href='https://console.cloud.google.com' target='x')
    https://console.cloud.google.com
  
%p I found the tiny "Cloud-Shell" button near the upper-left.

%p I hovered it to see: "Activate Google Cloud Shell".

%p I clicked it.

%p A dark window appeared at the bottom.

%p After 15 seconds, a white shell prompt appeared in the window.

%p I tried some shell commands and saw this:

.syntax
  %pre
    =render 'lesson001b'

%p I returned my attention to this page:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#2' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#2

%p I returned to the Cloud-Shell and typed a shell command which looked familiar:

.syntax
  %pre
    %code.bash git clone https://github.com/GoogleCloudPlatform/training-data-analyst

%p That worked well; I entered another shell command:

.syntax
  %pre
    %code.bash cd training-data-analyst/CPB100/lab3a

%p I entered another shell command:

.syntax
  %pre
    %code.bash less cloudsql/table_creation.sql

%p I saw some SQL syntax:

.syntax
  %pre
    =render 'lesson001c'

%p I can see in the above syntax that the SQL script declares three tables and their columns:

%ul
  %li Accommodation
  %li
    %ul
      %li id varchar(255),	 
      %li title varchar(255),	 
      %li location varchar(255), 
      %li price int,		 
      %li rooms int,		 
      %li rating float,		 
      %li type varchar(255),     
  %li Rating
  %li
    %ul
      %li userId varchar(255),
      %li accoId varchar(255),
      %li rating int,
  %li Recommendation
  %li
    %ul
      %li userId varchar(255),
      %li accoId varchar(255),
      %li prediction float,
  
%p I see two relationships in the above syntax:

%ul
  %li An Accommodation has 0 or more Ratings
  %li An Accommodation has 0 or more Recommendations
  
%p The tables might support these scenarios:

%ul
  %li When a user rates a house, the app adds a row to Rating.
  %li When admin adds a house for rent, the app adds a row to Accommodation.
  %li When ML-app predicts a user rating for a house, ML-app adds a row to Recommendation.
  
%p In Cloud-Shell I ran another command and collected the output:

.syntax
  %pre
    =render 'lesson001d'

%p I see in the above output that we have accommodations and ratings but no recommendations yet.

%p That completed my interaction with the page below:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#2' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#2

%p I navigated to the next page in the sequence:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#3' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#3

%p In Cloud-Shell I ran another command:

.syntax
  %pre
    %code.bash gsutil cp cloudsql/* gs://cs101feb2018/sql/

%p It was very slow; it needed 60 seconds to finish:

.syntax
  %pre
    =render 'lesson001e'

%p I verified success of the above command by visiting an appropriate URL:
%p
  %a(href='https://console.cloud.google.com/storage/browser/cs101feb2018/sql/' target='x')
    https://console.cloud.google.com/storage/browser/cs101feb2018/sql/
  
%p I navigated to the next page in the sequence:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#4' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#4

%p I studied that page.

%p The page listed 10 steps.

%p To start step 1, I visited this URL:

%p
  %a(href='https://console.cloud.google.com' target='x')
    https://console.cloud.google.com

%p I clicked the upper-left-hamburger-link and from there clicked: "SQL".

%p It served me a page describing: "Cloud SQL Instances"

%ul
  %li Cloud SQL instances are fully managed relational:
  %li MySQL databases
  %li PostgreSQL databases

%p I clicked the blue: "Create instance" button.

%p In the next page I picked the MySQL radio-button.

%p I clicked the blue: "Next" button.

%p In the next page I clicked the blue: "Choose Second Generation" button.

%p The next page landed me in a field: "Instance ID".

%p I entered string: "rentals".

%p I entered root password: "root".

%p I clicked the blue "Create" button.

%p GCP served me a page with information about my new db instance:

%ul
  %li MySQL 2nd Gen 5.7	35.226.122.211	cpb100-195004:us-central1:rentals
  %li IP: 35.226.122.211
  %li Instance connection name: cpb100-195004:us-central1:rentals

%p Next I started a Cloud-Shell in my browser by clicking an icon in the upper-right.

%p I ran shell commands:

.syntax
  %pre
    %code.bash
      cd ~/training-data-analyst/CPB100/lab3a
      bash find_my_ip.sh

%p I saw this:

.syntax
  %pre
    =render 'lesson001f'

%p I waited two hours.

%p GCP terminated my Cloud Shell session.

%p I started a new Cloud Shell session.

%p I ran shell commands:

.syntax
  %pre
    %code.bash
      cd ~/training-data-analyst/CPB100/lab3a
      bash authorize_cloudshell.sh
      bash find_my_ip.sh

%p I saw this:

.syntax
  %pre
    =render 'lesson001g'


%p I navigated to the next page in the sequence:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#5' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#5

%p I studied that page.

%p The page listed 4 steps.

%p To start step 1, I navigated to the URL listed below:

%p
  %a(href='https://console.cloud.google.com/sql' target='x')
    https://console.cloud.google.com/sql

%p I clicked the link called "rentals" which is the name of the Instance I created earlier.

%p I clicked "Import" at the top.

%p GCP served a page: "Import data from Cloud Storage"

%p I clicked the button named: "Browse".

%p GCP served a link named: "cs101feb2018" which is the name of the bucket I created earlier.

%p I clicked the "cs101feb2018" link.

%p GCP showed three files and a folder named "sql" in that bucket.

%p I clicked "table_creation.sql" in that folder.

%p GCP activated a blue button named "Import".

%p I clicked the button.

%p GCP got busy for 10 seconds and then indicated success with a green-check-mark.




%p I navigated to the next page in the sequence:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#5' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#5

%p I studied that page.

%p The page listed 3 steps.

%p To start step 1, I navigated to the URL listed below:

%p
  %a(href='https://console.cloud.google.com/sql' target='x')
    https://console.cloud.google.com/sql

%p I clicked the link called "rentals" which is the name of the Instance I created earlier.

%p I clicked "Import" at the top.

%p I browsed to accommodation.csv and selected it.

%p GCP served me a page: "Import data from Cloud Storage"

%p I selected radio-button: "CSV".

%p I selected database: "recommendation_spark".

%p In the next field, I entered string: "Accommodation".

%p GCP responded by activating the blue "Import" button.

%p I clicked the button.

%p GCP quickly served me a page named "Instance details".

%p Quickly after that it served a green-check-mark to indicate success.

%p I clicked "Import" at the top.

%p I browsed to rating.csv and selected it.

%p GCP served me a page: "Import data from Cloud Storage"

%p I selected radio-button: "CSV".

%p I selected database: "recommendation_spark".

%p In the next field, I entered string: "Rating".

%p GCP responded by activating the blue "Import" button.

%p I clicked the button.

%p GCP quickly served me a page named "Instance details".

%p Quickly after that it served a green-check-mark to indicate success.




%p I navigated to the next page in the sequence:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#6' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql/index.html#6

%p GCP served me a page named: "8. Explore Cloud SQL".

%p I studied that page.

%p The page contained 5 steps.

%p To start step 1, I visited this page:

%p
  %a(href='https://console.cloud.google.com/sql' target='x')
    https://console.cloud.google.com/sql
  
%p I used that page to get the IP address of the MySQL instance: 35.226.122.211

%p Next, I entered a shell command into Cloud Shell:

.syntax
  %pre
    %code.bash mysql --host=35.226.122.211 --user=root --password

%p I saw this:

.syntax
  %pre
    =render 'lesson001h'

%p At the MySQL prompt I entered a command:

.syntax
  %pre
    %code.bash use recommendation_spark;

%p I wanted to see tables so I typed this:

.syntax
  %pre
    %code.bash show tables;

%p I verifed that ratings.csv was loaded into ratings table:

.syntax
  %pre
    =render 'lesson001i'

%p I entered a SQL command:

.syntax
  %pre
    =render 'lesson001j'

%p That ended my interaction with the CPB100-node I call: "Setup rentals data in Cloud SQL".

%p If I want to return to that node its URL is listed below:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-cloud-sql

%p I returned to the URL listed below:
%p
  %a(href='https://codelabs.developers.google.com/cpb100' target='x')
    https://codelabs.developers.google.com/cpb100
%a(href='#top') [top]
%hr/
%h2#dataproc Dataproc

%p Next, I clicked the next link in the series:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-dataproc' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-dataproc

%p I studied the page it served me:
%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-dataproc/#0' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-dataproc/#0
  
%p I started a Cloud-Shell.

%p I verifed that repo: "training-data-analyst" was still available.

%p I verified that my MySQL instance was still available.

%p I navigated to the URL listed below:

%p
  %a(href='https://console.cloud.google.com/sql' target='x')
    https://console.cloud.google.com/sql

%p I clicked the icon for the MySQL instance.

%p I followed the import procedure I followed in the previous lab.

%p I collected output from Cloud-Shell during my effort to verify tables:


.syntax
  %pre
    =render 'lesson001k'


%p I clicked the next link in the series:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-dataproc/#1' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-dataproc/#1

%p I studied the page it served me.

%p I clicked the next link in the series:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-dataproc/#2' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-dataproc/#2

%p I studied the page it served me.

%p I noted the region of my Cloud SQL instance: "us-central1".

%p I clicked the upper-left-hamburger-link and from there clicked: "Dataproc".

%p GCP served me a page with blue-button: "Enable API".

%p I clicked it.

%p GCP served me a page with blue-button: "Create cluster".

%p I clicked it.

%p GCP served me a form to configure the cluster.

%p I ensured the cluster was in same region as my Cloud SQL instance: "us-central1".

%p I changed machine type of both master and worker nodes to: "n1-standard-2".

%p I specified the cluster have two nodes (the minimum).

%p I clicked the blue-button: "Create".

%p GCP server a page indicating it was busy building the cluster.

%p In Cloud-Shell I issued shell commands:

.syntax
  %pre
    %code.bash
      cd ~/training-data-analyst/CPB100/lab3b
      bash authorize_dataproc.sh cluster-27ae us-central1 2

%p It served me an error:


.syntax
  %pre
    =render 'lesson001m'

%p I studied the page at this URL:

%p
  %a(href='https://console.cloud.google.com/dataproc/clusters' target='x')
    https://console.cloud.google.com/dataproc/clusters
  
%p In Cloud-Shell I tried this shell command:

.syntax
  %pre
    %code.bash
      bash authorize_dataproc.sh cluster-27ae us-central1-f 2

%p It served me another error:

.syntax
  %pre
    =render 'lesson001n'

%p I used the web UI to authorize the addresses listed in the above error.

%p I found the web UI at this URL:

%p
  %a(href='https://console.cloud.google.com/sql/instances/rentals2/authorization' target='x')
    https://console.cloud.google.com/sql/instances/rentals2/authorization


%p I clicked the next link in the series:

%p
  %a(href='https://codelabs.developers.google.com/codelabs/cpb100-dataproc/#3' target='x')
    https://codelabs.developers.google.com/codelabs/cpb100-dataproc/#3

%p I studied that page.

%p I ran a shell command to open an editor in Cloud-Shell:

.syntax
  %pre
    %code.bash nano sparkml/train_and_apply.py

%a(href='#top') [top]
%hr/
%h2#bigquery-dataset Bigquery-Dataset
%p under construction

%a(href='#top') [top]
%hr/
%h2#tensorflow TensorFlow
%p under construction

%a(href='#top') [top]
%hr/
%h2#translate-api Translate-Api
%p under construction

%a(href='#top') [top]
%hr/
%h2#serverless-ingest Serverless-Ingest
%p under construction

%a(href='#top') [top]
%hr/
%h2#distributed-landsat Distributed-Landsat
%p under construction

%a(href='#top') [top]
%hr/
%h2#datalab  Datalab
%p under construction

%a(href='#top') [top]

%hr/
