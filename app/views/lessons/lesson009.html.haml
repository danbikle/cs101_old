%h1#top Lesson 009 [ Simple Docker Introductory Tutorial ]

%p This lesson shows how I stepped through some Docker tasks.

%h2 part-1: Create GCP Kubernetes Cluster of 1 Node

%p
  Q: Why use GCP Kubernetes node to operate Docker?
%p
  A: A GCP Kubernetes node comes with Docker installed; I avoid the chore of Docker installation.

%p
  I started by asking GCP to create a VM with Docker installed for me.

%p
  I did this by creating a kubernetes cluster of 1 host.

%p
  I started at this URL:

%p
  %a(href='https://console.cloud.google.com/kubernetes' target='x')
    https://console.cloud.google.com/kubernetes
%p I saw this:

%img(src='/lesson009/z001.png')

%p
  I clicked blue-button: "Create Cluster"

%p
  I made small changes to the form it served me:
%ul
  %li Ubuntu instead of "cos"
  %li Size 1 instead of 3
%p I saw this:

%img(src='/lesson009/z002.png')

%p
  It quickly created 1-node-cluster.
%p I saw this:

%img(src='/lesson009/z003.png')

%p
  After GCP created the node, I found it listed in this URL:

%p
  %a(href='https://console.cloud.google.com/compute/instances' target='x')
    https://console.cloud.google.com/compute/instances
  
%p I saw this:

%img(src='/lesson009/z004.png')

%h2 part-2: Run /bin/bash in new Docker Containers

%p
  I started by visiting this URL:

%p
  %a(href='https://console.cloud.google.com/compute/instances' target='x')
    https://console.cloud.google.com/compute/instances
  
%p
  I found the node I created in part-1.

%p
  I clicked the SSH link to gain shell access to the node.

%p I saw this:


%img(src='/lesson009/z005.png')


%p
  I entered a shell command:

.syntax
  %pre
    %code sudo docker run -it ubuntu:16.04 /bin/bash

%p
  After a bit of work, Docker served me a shell prompt from a newly hatched container.

%p I saw this:

%img(src='/lesson009/z006.png')

%p
  I entered a shell command:

.syntax
  %pre
    %code cat /etc/lsb-release

%p
  I saw this:

.syntax
  %pre
    %code
      root@84d3aed24cbd:/# cat /etc/lsb-release
      DISTRIB_ID=Ubuntu
      DISTRIB_RELEASE=16.04
      DISTRIB_CODENAME=xenial
      DISTRIB_DESCRIPTION="Ubuntu 16.04.4 LTS"
      root@84d3aed24cbd:/#

%p The above output convinced me that I had just deployed a Docker container running Ubuntu 16.04.4.
%p
  I typed exit to exit the container.

%p
  I was now back inside a shell of the cluster node.

%p
  So, that was a simple demo of creating a new Docker container and then running /bin/bash inside it.

%p
  Here is a another similar demo.

%p
  I ran a Docker shell command to bring up another container with Anaconda Python in it:

.syntax
  %pre
    %code sudo docker run -it continuumio/anaconda3 /bin/bash

%p
  After a bit of work, Docker served me a shell prompt from a newly hatched container.

%p I saw this:

%img(src='/lesson009/z007.png')

%p
  I entered a shell command:

.syntax
  %pre
    %code python

%p
  It served me a Python-3 prompt.

%p
  I entered Python commands:

.syntax
  %pre
    %code
      import pandas as pd
      from sklearn.datasets import load_boston
      bos_df = pd.DataFrame(load_boston().data)
      bos_df.columns = load_boston().feature_names
      bos_df.describe()

%p
  The above commands worked well.

%p I saw this:

%img(src='/lesson009/z008.png')

%p
  That convinced me that I could quickly gain access to a container running Anaconda Python.

%p
  I exited Python using the quit() command.

%p
  I exited the container with the shell command: "exit".

%p
  I ran another Docker shell command to bring up another container with Anaconda Python in it:

.syntax
  %pre
    %code sudo docker run -it continuumio/anaconda3 /bin/bash

%p
  Instantly, Docker served me a shell prompt from a newly hatched container.

%p This was different behavior than before.

%p Previously, Docker needed several minutes to bring up the container.

%p Now, Docker brought up the container instantly.

%p
  I entered a shell command:

.syntax
  %pre
    %code python

%p
  Quickly, I saw a Python prompt.

%p
  I exited Python using the quit() command.

%p
  I exited the container with the shell command: "exit".


%p
  %a(href='#top') [top]
%hr/
